import numpy as np

parVal = np.array([0.00469806, -0.0221835, 0.150256, 0.00342384, -0.0259537, 0.389673, -0.00316394, 0.0873142, 0.0401123, -0.213209, 0.00815738,0,0,0,0])
parSig = np.array([0.000826572, 0.0219649, 0.545977, 0.000486094, 0.0199175, 0.535867, 0.0028039, 0.0717923, 0.00925941, 0.15392, 0.00800515,0,0,0,0])


corrM = np.array([
    [1, -0.57184, -0.59452, 0.028632, 0.0168546, -0.0528669, -0.0538742, -0.17094, -0.107501, -0.0186144, 0.173412,0,0,0,0],
    [-0.57184, 1, 0.0537188, 0.108231, 0.472566, -0.516421, 0.541321, -0.263223, -0.167748, 0.585252, -0.42259,0,0,0,0],
    [-0.59452, 0.0537188, 1, -0.123521, -0.648032, 0.541387, -0.514889, 0.611739, 0.422989, -0.641671, 0.235066,0,0,0,0],
    [0.028632, 0.108231, -0.123521, 1, -0.134392, -0.585836, 0.345731, -0.0420984, 0.54837, 0.31989, -0.0785688,0,0,0,0],
    [0.0168546, 0.472566, -0.648032, -0.134392, 1, -0.403181, 0.615405, -0.584828, -0.623904, 0.760601, -0.454025,0,0,0,0],
    [-0.0528669, -0.516421, 0.541387, -0.585836, -0.403181, 1, -0.701146, 0.502016, 0.0602431, -0.785386, 0.349413,0,0,0,0],
    [-0.0538742, 0.541321, -0.514889, 0.345731, 0.615405, -0.701146, 1, -0.17813, 0.107099, 0.947879, -0.524553,0,0,0,0],
    [-0.17094, -0.263223, 0.611739, -0.0420984, -0.584828, 0.502016, -0.17813, 1., 0.762169, -0.417567, 0.177842,0,0,0,0],
    [-0.107501, -0.167748, 0.422989, 0.54837, -0.623904, 0.0602431, 0.107099, 0.762169, 1, -0.148796, 0.0967233,0,0,0,0],
    [-0.0186144, 0.585252, -0.641671, 0.31989, 0.760601, -0.785386, 0.947879, -0.417567, -0.148796, 1, -0.538033,0,0,0,0],
    [0.173412, -0.42259, 0.235066, -0.0785688, -0.454025, 0.349413, -0.524553, 0.177842, 0.0967233, -0.538033, 1,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]
])


covM = np.atleast_2d(parSig).T * corrM * parSig

eigVal, eigVec = np.linalg.eig(covM) 


eigSig = np.sqrt(eigVal) 

matC = np.zeros((15,15))

for i in range(eigSig.shape[0]):
    print('eigSigma: {:.10f}'.format(eigSig[i]))
    print('mean = {:.10f}'.format(np.dot(parVal, eigVec[:,i])))
    print('eigVect: {:.10f}, {:.10f}, {:.10f}, {:.10f}, {:.10f}, {:.10f}, {:.10f}, {:.10f}, {:.10f}, {:.10f}, {:.10f}, {:.10f}, {:.10f}, {:.10f}, {:.10f}'.format(*eigVec[:, i]))
    a = str(np.column_stack((eigSig[i]*eigVec[:, i], -eigSig[i]*eigVec[:, i])))
    print('up/down variation:', a.replace('\n', ',').replace('[', '{').replace(']', '}').replace('  ', ', '))
    print('-'*50)
    matC[i, i] = eigSig[i]*eigSig[i]


#inv = np.linalg.inv(matC) 
#print(inv)
